geom_point()  +
geom_labelsmooth(aes(label = neighbourhood_group), fill = "white",
method = "lm", formula = y ~ x,
size = 3, linewidth = 1.5, boxlinewidth = 0.4)+
labs(title = "Scatter plot of neighborhood group which represents map", x="Longitude", y= "Latitude") +
theme_classic()
ggplot(dataSet , aes(x=longitude, y=latitude, shape=neighbourhood_group, color=neighbourhood_group)) +
geom_point()  +
geom_labelsmooth(aes(label = neighbourhood_group), fill = "white",
method = "lm", formula = y ~ x,
size = 3, linewidth = 1.5, boxlinewidth = 0.4)+
labs(title = "Scatter plot of neighborhood group which represents map", x="Longitude", y= "Latitude"
fill = "Neighborhood Group", color = "Neighborhood Group") +
ggplot(dataSet , aes(x=longitude, y=latitude, shape=neighbourhood_group, color=neighbourhood_group)) +
geom_point()  +
geom_labelsmooth(aes(label = neighbourhood_group), fill = "white",
method = "lm", formula = y ~ x,
size = 3, linewidth = 1.5, boxlinewidth = 0.4)+
labs(title = "Scatter plot of neighborhood group which represents map", x="Longitude", y= "Latitude",
fill = "Neighborhood Group", color = "Neighborhood Group") +
theme_classic()
ggplot(dataSet , aes(x=longitude, y=latitude, shape=neighbourhood_group, color=neighbourhood_group)) +
geom_point()  +
geom_labelsmooth(aes(label = neighbourhood_group), fill = "white",
method = "lm", formula = y ~ x,
size = 3, linewidth = 1.5, boxlinewidth = 0.4)+
labs(title = "Scatter plot of neighborhood group which represents map", x="Longitude", y= "Latitude",
fill = "Neighborhood Group") +
theme_classic()
ggplot(dataSet , aes(x=longitude, y=latitude, shape=neighbourhood_group, color=neighbourhood_group)) +
geom_point()  +
geom_labelsmooth(aes(label = neighbourhood_group), fill = "white",
method = "lm", formula = y ~ x,
size = 3, linewidth = 1.5, boxlinewidth = 0.4)+
labs(title = "Scatter plot of neighborhood group which represents map", x="Longitude", y= "Latitude",
color = "Neighborhood Group") +
theme_classic()
ggplot(dataSet , aes(x=longitude, y=latitude, shape=neighbourhood_group, color=neighbourhood_group)) +
geom_point()  +
geom_labelsmooth(aes(label = neighbourhood_group), fill = "white",
method = "lm", formula = y ~ x,
size = 3, linewidth = 1.5, boxlinewidth = 0.4)+
labs(title = "Scatter plot of neighborhood group which represents map", x="Longitude", y= "Latitude",
fill = "Neighborhood Group", color = "Neighborhood Group") +
theme_classic()
ggplot(dataSet , aes(x=longitude, y=latitude, shape=neighbourhood_group, color=neighbourhood_group)) +
geom_point()  +
geom_labelsmooth(aes(label = neighbourhood_group), fill = "white",
method = "lm", formula = y ~ x,
size = 3, linewidth = 1.5, boxlinewidth = 0.4)+
labs(title = "Scatter plot of neighborhood group which represents map", x="Longitude", y= "Latitude",
shape = "Neighborhood Group", color = "Neighborhood Group") +
theme_classic()
ggplot(dataSet, aes(neighbourhood_group, availability_365, price  )) + geom_tile(fill= "darkgreen")
ggplot(dataSet, aes(neighbourhood_group, room_type, price  )) + geom_tile(fill= "darkgreen")
ggplot(dataSet, aes(neighbourhood_group, minimum_nights, price  )) + geom_tile(fill= "darkgreen")
ggplot(dataSet, aes(neighbourhood_group, room_type, minimum_nights  )) + geom_tile(fill= "darkgreen")
ggplot(dataSet, aes(price, room_type, minimum_nights  )) + geom_tile(fill= "darkgreen")
ggplot(dataSet, aes(neighbourhood_group, room_type, price  )) + geom_tile(fill= "darkgreen")
ggplot(dataSet, aes(neighbourhood_group, availability_365, price  )) + geom_tile(fill= "darkgreen")
ggplot(dataSet, aes(neighbourhood_group, minimum_nights, price  )) + geom_tile(fill= "darkgreen")
ggplot(dataSet, aes(neighbourhood_group, room_type, reviews_per_month  )) + geom_tile(fill= "darkgreen")
ggplot(dataSet, aes(neighbourhood_group, room_type, calculated_host_listings_count  )) + geom_tile(fill= "darkgreen")
ggplot(dataSet, aes(neighbourhood_group, availability_365, calculated_host_listings_count  )) + geom_tile(fill= "darkgreen")
ggplot(dataSet, aes(neighbourhood_group, room_type, calculated_host_listings_count  )) + geom_tile(fill= "darkgreen")
ggplot(dataSet, aes(neighbourhood_group, room_type, reviews_per_month  )) + geom_tile(fill= "darkgreen")
ggplot(dataSet, aes(neighbourhood_group, minimum_nights, reviews_per_month  )) + geom_tile(fill= "darkgreen")
ggplot(dataSet, aes(neighbourhood_group, calculated_host_listings_count, reviews_per_month  )) + geom_tile(fill= "darkgreen")
ggplot(dataSet, aes(neighbourhood_group, calculated_host_listings_count, reviews_per_month  )) + geom_tile(fill= "#F80D6A")
ggplot(dataSet, aes(neighbourhood_group, calculated_host_listings_count, reviews_per_month  )) +
geom_tile(fill= "#F80D6A")+
labs(title = "Scatter plot of neighborhood group which represents map", x="Longitude", y= "Latitude")
ggplot(dataSet, aes(neighbourhood_group, calculated_host_listings_count, reviews_per_month  )) +
geom_tile(fill= "#F80D6A")+
labs(title = "Heat map of neighborhood and total hostlisting which has reviews per month",
x="Neighborhood Group", y= "Total Host listing")
ggplot(dataSet, aes(neighbourhood_group, calculated_host_listings_count, reviews_per_month  )) +
geom_tile(fill= "#F80D6A")+
labs(title = "Heat map of neighborhood and total hostlisting which has reviews per month",
x="Neighborhood Group", y= "Total Host listing")+
theme_dark()
ggplot(dataSet, aes(neighbourhood_group, calculated_host_listings_count, reviews_per_month  )) +
geom_tile(fill= "#F80D6A")+
labs(title = "Heat map of neighborhood and total hostlisting which has reviews per month",
x="Neighborhood Group", y= "Total Host listing")+
theme_classic()
ggplot(dataSet, aes(fill=neighbourhood_group, y=availability_365, x=room_type)) +
geom_bar(position="stack", stat="identity")
cor_df<- dataSet[, !(names(data) %in% c("id", "name","host_id","host_name","neighbourhood_group","neighbourhood","room_type","last_review"))]
cor_df
#heatmap(num_df1, scale="column")
cor_df<- dataSet[, !(names(data) %in% c("id", "name","host_id","host_name","neighbourhood_group","neighbourhood","room_type","last_review"))]
cor_df
cor(cor_df)
#heatmap(num_df1, scale="column")
cor_df<- dataSet[, !(names(dataSet) %in% c("id", "name","host_id","host_name","neighbourhood_group","neighbourhood","room_type","last_review"))]
cor_df
cor(cor_df)
#heatmap(num_df1, scale="column")
ggcorrplot(cor_df,hc.order = TRUE, title="", lab=TRUE)
install.packages("ggcorrplot")
library(ggplot2)
library(geomtextpath)
library(ggcorrplot)
ggcorrplot(cor_df,hc.order = TRUE, title="", lab=TRUE)
cor_df<- dataSet[, !(names(dataSet) %in% c("id", "name","host_id","host_name","neighbourhood_group","neighbourhood","room_type","last_review"))]
cor_df
cor_df<- round(cor(cor_df),2)
#heatmap(num_df1, scale="column")
ggcorrplot(cor_df,hc.order = TRUE, title="", lab=TRUE)
ggcorrplot(cor_df,hc.order = TRUE, title="", lab=TRUE, lab_size =4 )
ggcorrplot(cor_df,hc.order = TRUE, title="", lab=TRUE, lab_size =1 )
ggcorrplot(cor_df,hc.order = TRUE, title="", lab=TRUE, lab_size =2 )
ggcorrplot(cor_df,hc.order = TRUE, title="", lab=TRUE, lab_size =2.5 )
cor_df<- dataSet[, !(names(dataSet) %in% c("id", "name","host_id","host_name","neighbourhood_group","neighbourhood","room_type","last_review"))]
cor_df
cor_df<- round(cor(cor_df),3)
#heatmap(num_df1, scale="column")
ggcorrplot(cor_df,hc.order = TRUE, title="", lab=TRUE, lab_size =2.5 )
cor_df<- dataSet[, !(names(dataSet) %in% c("id", "name","host_id","host_name","neighbourhood_group","neighbourhood","room_type","last_review"))]
cor_df
cor_df<- round(cor(cor_df),3)
#heatmap(num_df1, scale="column")
ggcorrplot(cor_df,hc.order = TRUE, title="", lab=TRUE, lab_size =2.5 )
ggplot(dataSet, aes(fill=neighbourhood_group, y=availability_365, x=room_type)) +
geom_bar(position="stack", stat="identity")+
labs(title = "Heat map of neighborhood and total hostlisting which has reviews per month",
x="Room Type", y= "Availability Frequency")+
theme_classic()
ggplot(dataSet, aes(fill=neighbourhood_group, y=availability_365, x=room_type)) +
geom_bar(position="stack", stat="identity")+
labs(title = "Heat map of neighborhood and total hostlisting which has reviews per month",
x="Room Type", y= "Availability Frequency", fill= "Neighborhood Group")+
theme_classic()
ggplot(dataSet, aes(fill= neighbourhood_group, price,room_type  )) +
geom_bar(position = "dodge", stat= "identity")+
labs(title = "Heat map of neighborhood and total hostlisting which has reviews per month",
x="Price", y= "Room Type", fill= "Neighborhood Group")+
theme_classic()
ggplot(dataSet, aes(fill= neighbourhood_group, price,room_type  )) +
geom_bar(position = "dodge", stat= "identity")+
labs(title = "Grouped bar chart of room type according to price",
x="Price", y= "Room Type", fill= "Neighborhood Group")+
theme_classic()
ggplot(dataSet, aes(neighbourhood_group, calculated_host_listings_count, fill="reviews_per_month"  )) +
geom_tile(fill= "#F80D6A")+
labs(title = "Heat map of neighborhood and total hostlisting which has reviews per month",
x="Neighborhood Group", y= "Total Host listing")+
theme_classic()
ggplot(dataSet, aes(neighbourhood_group, calculated_host_listings_count, reviews_per_month, label="reviews_per_month"  )) +
geom_tile(fill= "#F80D6A")+
labs(title = "Heat map of neighborhood and total hostlisting which has reviews per month",
x="Neighborhood Group", y= "Total Host listing")+
theme_classic()
ggplot(dataSet, aes(neighbourhood_group, calculated_host_listings_count, reviews_per_month  )) +
geom_tile(aes(label="reviews_per_month",),fill= "#F80D6A")+
labs(title = "Heat map of neighborhood and total hostlisting which has reviews per month",
x="Neighborhood Group", y= "Total Host listing")+
theme_classic()
ggplot(dataSet, aes(neighbourhood_group, calculated_host_listings_count, reviews_per_month  )) +
geom_tile(fill= "#F80D6A")+
labs(title = "Heat map of neighborhood and total hostlisting which has reviews per month",
x="Neighborhood Group", y= "Total Host listing")+
theme_classic()
cor_df<- dataSet[, !(names(dataSet) %in% c("id", "name","host_id","host_name","neighbourhood_group","neighbourhood","room_type","last_review"))]
cor_df
cor_df<- round(cor(cor_df),3)
#heatmap(num_df1, scale="column")
ggcorrplot(cor_df,hc.order = TRUE, title="", lab=TRUE, lab_size =2.5 )
ggplot(dataSet, aes(neighbourhood_group, calculated_host_listings_count  )) +
geom_tile(fill= reviews_per_month)+
labs(title = "Heat map of neighborhood and total host listing which has reviews per month",
x="Neighborhood Group", y= "Total Host listing")+
theme_classic()
ggplot(dataSet, aes(neighbourhood_group, calculated_host_listings_count  )) +
geom_tile(aes(fill= reviews_per_month))+
labs(title = "Heat map of neighborhood and total host listing which has reviews per month",
x="Neighborhood Group", y= "Total Host listing")+
theme_classic()
ggplot(dataSet, aes(neighbourhood_group, room_type  )) +
geom_tile(aes(fill= reviews_per_month))+
labs(title = "Heat map of neighborhood and total host listing which has reviews per month",
x="Neighborhood Group", y= "Total Host listing")+
theme_classic()
ggplot(dataSet, aes(neighbourhood_group, neighbourhood  )) +
geom_tile(aes(fill= reviews_per_month))+
labs(title = "Heat map of neighborhood and total host listing which has reviews per month",
x="Neighborhood Group", y= "Total Host listing")+
theme_classic()
ggplot(dataSet, aes(neighbourhood_group, neighbourhood_group  )) +
geom_tile(aes(fill= reviews_per_month))+
labs(title = "Heat map of neighborhood and total host listing which has reviews per month",
x="Neighborhood Group", y= "Total Host listing")+
theme_classic()
ggplot(dataSet, aes(neighbourhood_group, host_name  )) +
geom_tile(aes(fill= reviews_per_month))+
labs(title = "Heat map of neighborhood and total host listing which has reviews per month",
x="Neighborhood Group", y= "Total Host listing")+
theme_classic()
ggplot(dataSet, aes(neighbourhood_group, host_name  )) +
geom_tile(aes(fill= reviews_per_month))+
labs(title = "Heat map of neighborhood and total host listing which has reviews per month",
x="Neighborhood Group", y= "Total Host listing")+
theme_classic()
ggplot(dataSet, aes(neighbourhood_group, reviews_per_month  )) +
geom_tile(aes(fill= reviews_per_month))+
labs(title = "Heat map of neighborhood and total host listing which has reviews per month",
x="Neighborhood Group", y= "Total Host listing")+
theme_classic()
ggplot(dataSet, aes(neighbourhood_group, reviews_per_month  )) +
geom_tile(aes(fill= reviews_per_month))+
labs(title = "Heat map of neighborhood and total host listing which has reviews per month",
x="Neighborhood Group", y= "Total Host listing")+
theme_classic()
ggplot(dataSet, aes(neighbourhood_group, reviews_per_month  )) +
geom_tile(aes(fill= calculated_host_listings_count))+
labs(title = "Heat map of neighborhood and total host listing which has reviews per month",
x="Neighborhood Group", y= "Total Host listing")+
theme_classic()
ggplot(dataSet, aes(neighbourhood_group, calculated_host_listings_count  )) +
geom_tile(aes(fill= reviews_per_month))+
labs(title = "Heat map of neighborhood and total host listing which has reviews per month",
x="Neighborhood Group", y= "Total Host listing")+
theme_classic()
ggplot(dataSet, aes(neighbourhood_group, calculated_host_listings_count  )) +
geom_tile(aes(fill= reviews_per_month))+
labs(title = "Heat map of neighborhood and total host listing which has reviews per month",
x="Neighborhood Group", y= "Total Host listing", fill="Reviews Per Month")+
theme_classic()
cor_df<- dataSet[, !(names(dataSet) %in% c("id", "name","host_id","host_name","neighbourhood_group","neighbourhood","room_type","last_review"))]
cor_df
cor_df<- round(cor(cor_df),3)
cor_df
#heatmap(num_df1, scale="column")
cor_df<- round(cor(cor_df),3)
cor_df
cor_df<- dataSet[, !(names(dataSet) %in% c("id", "name","host_id","host_name","neighbourhood_group","neighbourhood","room_type","last_review"))]
cor_df
library(ggplot2)
library(DescTools)
library(geomtextpath)
library(ggcorrplot)
dataSet <-read.csv("NYCAirBnb.csv")
dataSet <- na.omit(dataSet)
head(dataSet)
numeric_df<- dataSet[, !(names(dataSet) %in% c("id", "name","host_id","host_name","neighbourhood_group","neighbourhood","room_type","last_review"))]
print("For Numeric Features")
summary(numeric_df)
infoCategoricalData<- function(columnName){
cat(sprintf("\n Information of: %s\n", columnName))
print(DescTools::Mode(dataSet[,columnName]))
}
print("For Categorical Features")
infoCategoricalData('name')
infoCategoricalData('host_name')
infoCategoricalData('neighbourhood_group')
infoCategoricalData('neighbourhood')
infoCategoricalData('room_type')
infoCategoricalData('last_review')
ggplot( dataSet,aes(x=availability_365, fill=room_type)) +
geom_histogram(binwidth= 30,color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(name= "Room Type",values=c("#E30429", "#22F47B","#7BE5FF")) +
labs(title = "Histogram of availability according to room type", x="Availability", y= "Frecuency")+
theme_classic()
ggplot(dataSet,aes(x=availability_365, group=neighbourhood_group, fill=neighbourhood_group)) +
geom_density(position="fill")+
scale_fill_manual(name= "Neighbourhood Group",values=c("#E30429", "#22F47B","#7BE5FF","#A00E86","#A307F1"))+
labs(title = "Density plot of availability according to neighborhood group", x="Availability", y= "Density") +
theme_classic()
ggplot(dataSet, aes( neighbourhood_group ,  availability_365)) +
geom_boxplot(fill= "#81F5AD")+
labs(title = "Boxplot of availability according to neighbourhood group", x="Neighbourhood Group", y= "Availability") +
theme_classic()
#boxplot(data$availability_365 ~ data$room_type , ylab="sickness" , col="#69b3a2", boxwex=0.5 , main="")
ggplot(dataSet, aes( availability_365 ,  room_type)) +
geom_boxplot(fill= "#7009DE", col="#69b3a2")+
labs(title = "Boxplot of availability according to room type", x="Availability", y= "Room Type") +
theme_classic()
ggplot(dataSet , aes(x=longitude, y=latitude, shape=neighbourhood_group, color=neighbourhood_group)) +
geom_point()  +
geom_labelsmooth(aes(label = neighbourhood_group), fill = "white",
method = "lm", formula = y ~ x,
size = 3, linewidth = 1.5, boxlinewidth = 0.4)+
labs(title = "Scatter plot of neighborhood group which represents map", x="Longitude", y= "Latitude",
shape = "Neighborhood Group", color = "Neighborhood Group") +
theme_classic()
ggplot(dataSet, aes(neighbourhood_group, calculated_host_listings_count  )) +
geom_tile(aes(fill= reviews_per_month))+
labs(title = "Heat map of neighborhood and total host listing which has reviews per month",
x="Neighborhood Group", y= "Total Host listing", fill="Reviews Per Month")+
theme_classic()
ggplot(dataSet, aes(fill=neighbourhood_group, y=availability_365, x=room_type)) +
geom_bar(position="stack", stat="identity")+
labs(title = "Neighbourhood Group availablity according to room type.",
x="Room Type", y= "Availability Frequency", fill= "Neighborhood Group")+
theme_classic()
ggplot(dataSet, aes(fill= neighbourhood_group, price,room_type  )) +
geom_bar(position = "dodge", stat= "identity")+
labs(title = "Grouped bar chart of room type according to price",
x="Price", y= "Room Type", fill= "Neighborhood Group")+
theme_classic()
cor_df<- dataSet[, !(names(dataSet) %in% c("id", "name","host_id","host_name","neighbourhood_group","neighbourhood","room_type","last_review"))]
cor_df
cor_df<- round(cor(cor_df),3)
cor_df
ggcorrplot(cor_df,hc.order = TRUE, title="", lab=TRUE, lab_size =2.5 )
library(ggplot2)
library(DescTools)
library(geomtextpath)
library(ggcorrplot)
dataSet <-read.csv("NYCAirBnb.csv")
dataSet <- na.omit(dataSet)
head(dataSet)
numeric_df<- dataSet[, !(names(dataSet) %in% c("id", "name","host_id","host_name","neighbourhood_group","neighbourhood","room_type","last_review"))]
print("For Numeric Features")
summary(numeric_df)
infoCategoricalData<- function(columnName){
cat(sprintf("\n Information of: %s\n", columnName))
print(DescTools::Mode(dataSet[,columnName]))
}
print("For Categorical Features")
infoCategoricalData('name')
infoCategoricalData('host_name')
infoCategoricalData('neighbourhood_group')
infoCategoricalData('neighbourhood')
infoCategoricalData('room_type')
infoCategoricalData('last_review')
ggplot( dataSet,aes(x=availability_365, fill=room_type)) +
geom_histogram(binwidth= 30,color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(name= "Room Type",values=c("#E30429", "#22F47B","#7BE5FF")) +
labs(title = "Histogram of availability according to room type", x="Availability", y= "Frecuency")+
theme_classic()
ggplot(dataSet,aes(x=availability_365, group=neighbourhood_group, fill=neighbourhood_group)) +
geom_density(position="fill")+
scale_fill_manual(name= "Neighbourhood Group",values=c("#E30429", "#22F47B","#7BE5FF","#A00E86","#A307F1"))+
labs(title = "Density plot of availability according to neighborhood group", x="Availability", y= "Density") +
theme_classic()
ggplot(dataSet, aes( neighbourhood_group ,  availability_365)) +
geom_boxplot(fill= "#81F5AD")+
labs(title = "Boxplot of availability according to neighbourhood group", x="Neighbourhood Group", y= "Availability") +
theme_classic()
#boxplot(data$availability_365 ~ data$room_type , ylab="sickness" , col="#69b3a2", boxwex=0.5 , main="")
ggplot(dataSet, aes( availability_365 ,  room_type)) +
geom_boxplot(fill= "#7009DE", col="#69b3a2")+
labs(title = "Boxplot of availability according to room type", x="Availability", y= "Room Type") +
theme_classic()
ggplot(dataSet , aes(x=longitude, y=latitude, shape=neighbourhood_group, color=neighbourhood_group)) +
geom_point()  +
geom_labelsmooth(aes(label = neighbourhood_group), fill = "white",
method = "lm", formula = y ~ x,
size = 3, linewidth = 1.5, boxlinewidth = 0.4)+
labs(title = "Scatter plot of neighborhood group which represents map", x="Longitude", y= "Latitude",
shape = "Neighborhood Group", color = "Neighborhood Group") +
theme_classic()
ggplot(dataSet, aes(neighbourhood_group, calculated_host_listings_count  )) +
geom_tile(aes(fill= reviews_per_month))+
labs(title = "Heat map of neighborhood and total host listing which has reviews per month",
x="Neighborhood Group", y= "Total Host listing", fill="Reviews Per Month")+
theme_classic()
ggplot(dataSet, aes(fill=neighbourhood_group, y=availability_365, x=room_type)) +
geom_bar(position="stack", stat="identity")+
labs(title = "Neighbourhood Group availablity according to room type.",
x="Room Type", y= "Availability Frequency", fill= "Neighborhood Group")+
theme_classic()
ggplot(dataSet, aes(fill= neighbourhood_group, price,room_type  )) +
geom_bar(position = "dodge", stat= "identity")+
labs(title = "Grouped bar chart of room type according to price",
x="Price", y= "Room Type", fill= "Neighborhood Group")+
theme_classic()
cor_df<- dataSet[, !(names(dataSet) %in% c("id", "name","host_id","host_name","neighbourhood_group","neighbourhood","room_type","last_review"))]
cor_df
cor_df<- round(cor(cor_df),3)
cor_df
ggcorrplot(cor_df,hc.order = TRUE, title="", lab=TRUE, lab_size =2.5 )
library(ggplot2)
library(DescTools)
library(geomtextpath)
library(ggcorrplot)
library(ggplot2)
library(DescTools)
library(geomtextpath)
library(ggcorrplot)
dataSet <-read.csv("NYCAirBnb.csv")
dataSet <- na.omit(dataSet)
head(dataSet)
numeric_df<- dataSet[, !(names(dataSet) %in% c("id", "name","host_id","host_name","neighbourhood_group","neighbourhood","room_type","last_review"))]
print("For Numeric Features")
summary(numeric_df)
infoCategoricalData<- function(columnName){
cat(sprintf("\n Information of: %s\n", columnName))
print(DescTools::Mode(dataSet[,columnName]))
}
print("For Categorical Features")
infoCategoricalData('name')
infoCategoricalData('host_name')
infoCategoricalData('neighbourhood_group')
infoCategoricalData('neighbourhood')
infoCategoricalData('room_type')
infoCategoricalData('last_review')
ggplot( dataSet,aes(x=availability_365, fill=room_type)) +
geom_histogram(binwidth= 30,color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(name= "Room Type",values=c("#E30429", "#22F47B","#7BE5FF")) +
labs(title = "Histogram of availability according to room type", x="Availability", y= "Frecuency")+
theme_classic()
ggplot(dataSet,aes(x=availability_365, group=neighbourhood_group, fill=neighbourhood_group)) +
geom_density(position="fill")+
scale_fill_manual(name= "Neighbourhood Group",values=c("#E30429", "#22F47B","#7BE5FF","#A00E86","#A307F1"))+
labs(title = "Density plot of availability according to neighborhood group", x="Availability", y= "Density") +
theme_classic()
ggplot(dataSet, aes( neighbourhood_group ,  availability_365)) +
geom_boxplot(fill= "#81F5AD")+
labs(title = "Boxplot of availability according to neighbourhood group", x="Neighbourhood Group", y= "Availability") +
theme_classic()
#boxplot(data$availability_365 ~ data$room_type , ylab="sickness" , col="#69b3a2", boxwex=0.5 , main="")
ggplot(dataSet, aes( availability_365 ,  room_type)) +
geom_boxplot(fill= "#7009DE", col="#69b3a2")+
labs(title = "Boxplot of availability according to room type", x="Availability", y= "Room Type") +
theme_classic()
ggplot(dataSet , aes(x=longitude, y=latitude, shape=neighbourhood_group, color=neighbourhood_group)) +
geom_point()  +
geom_labelsmooth(aes(label = neighbourhood_group), fill = "white",
method = "lm", formula = y ~ x,
size = 3, linewidth = 1.5, boxlinewidth = 0.4)+
labs(title = "Scatter plot of neighborhood group which represents map", x="Longitude", y= "Latitude",
shape = "Neighborhood Group", color = "Neighborhood Group") +
theme_classic()
ggplot(dataSet, aes(neighbourhood_group, calculated_host_listings_count  )) +
geom_tile(aes(fill= reviews_per_month))+
labs(title = "Heat map of neighborhood and total host listing which has reviews per month",
x="Neighborhood Group", y= "Total Host listing", fill="Reviews Per Month")+
theme_classic()
ggplot(dataSet, aes(fill=neighbourhood_group, y=availability_365, x=room_type)) +
geom_bar(position="stack", stat="identity")+
labs(title = "Neighbourhood Group availablity according to room type.",
x="Room Type", y= "Availability Frequency", fill= "Neighborhood Group")+
theme_classic()
ggplot(dataSet, aes(fill= neighbourhood_group, price,room_type  )) +
geom_bar(position = "dodge", stat= "identity")+
labs(title = "Grouped bar chart of room type according to price",
x="Price", y= "Room Type", fill= "Neighborhood Group")+
theme_classic()
cor_df<- dataSet[, !(names(dataSet) %in% c("id", "name","host_id","host_name","neighbourhood_group","neighbourhood","room_type","last_review"))]
cor_df
cor_df<- round(cor(cor_df),3)
ggcorrplot(cor_df,hc.order = TRUE, title="", lab=TRUE, lab_size =2.5 )
library(ggplot2)
library(DescTools)
library(geomtextpath)
library(ggcorrplot)
dataSet <-read.csv("NYCAirBnb.csv")
dataSet <- na.omit(dataSet)
head(dataSet)
numeric_df<- dataSet[, !(names(dataSet) %in% c("id", "name","host_id","host_name","neighbourhood_group","neighbourhood","room_type","last_review"))]
print("For Numeric Features")
summary(numeric_df)
infoCategoricalData<- function(columnName){
cat(sprintf("\n Information of: %s\n", columnName))
print(DescTools::Mode(dataSet[,columnName]))
}
print("For Categorical Features")
infoCategoricalData('name')
infoCategoricalData('host_name')
infoCategoricalData('neighbourhood_group')
infoCategoricalData('neighbourhood')
infoCategoricalData('room_type')
infoCategoricalData('last_review')
ggplot( dataSet,aes(x=availability_365, fill=room_type)) +
geom_histogram(binwidth= 30,color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(name= "Room Type",values=c("#E30429", "#22F47B","#7BE5FF")) +
labs(title = "Histogram of availability according to room type", x="Availability", y= "Frecuency")+
theme_classic()
ggplot(dataSet,aes(x=availability_365, group=neighbourhood_group, fill=neighbourhood_group)) +
geom_density(position="fill")+
scale_fill_manual(name= "Neighbourhood Group",values=c("#E30429", "#22F47B","#7BE5FF","#A00E86","#A307F1"))+
labs(title = "Density plot of availability according to neighborhood group", x="Availability", y= "Density") +
theme_classic()
ggplot(dataSet, aes( neighbourhood_group ,  availability_365)) +
geom_boxplot(fill= "#81F5AD")+
labs(title = "Boxplot of availability according to neighbourhood group", x="Neighbourhood Group", y= "Availability") +
theme_classic()
#boxplot(data$availability_365 ~ data$room_type , ylab="sickness" , col="#69b3a2", boxwex=0.5 , main="")
ggplot(dataSet, aes( availability_365 ,  room_type)) +
geom_boxplot(fill= "#7009DE", col="#69b3a2")+
labs(title = "Boxplot of availability according to room type", x="Availability", y= "Room Type") +
theme_classic()
ggplot(dataSet , aes(x=longitude, y=latitude, shape=neighbourhood_group, color=neighbourhood_group)) +
geom_point()  +
geom_labelsmooth(aes(label = neighbourhood_group), fill = "white",
method = "lm", formula = y ~ x,
size = 3, linewidth = 1.5, boxlinewidth = 0.4)+
labs(title = "Scatter plot of neighborhood group which represents map", x="Longitude", y= "Latitude",
shape = "Neighborhood Group", color = "Neighborhood Group") +
theme_classic()
ggplot(dataSet, aes(neighbourhood_group, calculated_host_listings_count  )) +
geom_tile(aes(fill= reviews_per_month))+
labs(title = "Heat map of neighborhood and total host listing which has reviews per month",
x="Neighborhood Group", y= "Total Host listing", fill="Reviews Per Month")+
theme_classic()
ggplot(dataSet, aes(fill=neighbourhood_group, y=availability_365, x=room_type)) +
geom_bar(position="stack", stat="identity")+
labs(title = "Neighbourhood Group availablity according to room type.",
x="Room Type", y= "Availability Frequency", fill= "Neighborhood Group")+
theme_classic()
ggplot(dataSet, aes(fill= neighbourhood_group, price,room_type  )) +
geom_bar(position = "dodge", stat= "identity")+
labs(title = "Grouped bar chart of room type according to price",
x="Price", y= "Room Type", fill= "Neighborhood Group")+
theme_classic()
cor_df<- dataSet[, !(names(dataSet) %in% c("id", "name","host_id","host_name","neighbourhood_group","neighbourhood","room_type","last_review"))]
cor_df<- round(cor(cor_df),3)
cor_df
ggcorrplot(cor_df,hc.order = TRUE, title="", lab=TRUE, lab_size =2.5 )
